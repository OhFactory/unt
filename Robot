public class Robot{

private Vector3 TargetPosition;
//private Vector3 TargetAngle;//Foward
private float Distance;

[SerializeField]
private Transform Target;

[SerializeField]
private Parts[] Vertical_;
[SerializeField]
private Parts[] Horizontal_;
[SerializeField]
private Transform Bone_Hand;


void Update(){
  

}

private Vector3 NowPosition(){
Vector3 Position;

  for(int i=0;i<Vertical_.Length;i++){
    Angle.y+=Vertical[i].Position();
  }
  for(int i=0;i<Horizontal_.Length;i++){
    Angle.x+=Horizontal[i].Position();
  }

  return Position;
}

private Vector3 NowAngle(){
  Vector3 Angle;
  for(int i=0;i<Vertical_.Length;i++){
    Angle.y+=Vertical[i].Angle;
  }
  for(int i=0;i<Horizontal_.Length;i++){
    Angle.x+=Horizontal[i].Angle;
  }

  return Angle;
}
private void Calc(){
TargetPosition=Target.position+Target.rotation.EulerAngle.nomalized*Distance;

Vector3 TempV=TargetPosition-Position;
  if(Math.Abs(TempV.x)>Math.Abs(tempV.y))VerticalFunc();
  else HorizontalFunc();
  
}
private Vector3 VerticalFunc(){
  
}
private void HorizonFunc(){

}


private void RotateVertical(){

}
private void RotateHorizon(){

}

}
